import unittest

import tempfile
import shutil
import os
import csv
import pandas as pd

from plot_roc import WekaClassifierExecutor

import config

class TestWekaClassifierExecutor(unittest.TestCase):
    """
    Test if the files generated by a single classifier build (naive bayes in this case),
    are consistent with what should be generated
    """

    def setUp(self):
        # Create a temp dir to keep the files produced by Weka.
        self.experiment_dir = tempfile.mkdtemp()

    def tearDown(self):
        # Clean all the directory with the files
        shutil.rmtree(self.experiment_dir)

    def test_classifier_with_success(self):
        weka_lib = '/Applications/weka-3-8-1-oracle-jvm.app/Contents/Java/weka.jar'

        classifier_dir = self.experiment_dir + "/naive-bayes"

        executor = WekaClassifierExecutor(
            experiment_dir = self.experiment_dir,
            weka_jar = weka_lib,
            train_file = "dataset-a.csv",
            test_file = "dataset-b.csv",
            classifiers = ["naive-bayes"],
            specificities_points = [0.9, 0.8],
            interpolation_kind = 'linear',
            config = config)

        print(executor.resume())

        executor.run()

        csv_file = open(self.experiment_dir + "/summary.csv", 'r')
        csv_file = csv_file.read()
        csv_rows = [row for row in csv.reader(csv_file.splitlines())]

        self.assertEqual(csv_rows[0], ['Classificador', 'AROC', '90%', '80%', 'Train Command', 'Test Command'])

        self.assertEqual(csv_rows[1][0], 'naive-bayes')
        self.assertEqual(csv_rows[1][1], '0.912')
        self.assertEqual(csv_rows[1][2], '0.758')
        self.assertEqual(csv_rows[1][3], '0.848')

        train_command = csv_rows[1][4].split(" ")

        self.assertEqual(train_command[0], 'java')
        self.assertEqual(train_command[1], '-cp')
        self.assertEqual(train_command[2], weka_lib)
        self.assertEqual(train_command[3], 'weka.Run')
        self.assertEqual(train_command[4], 'weka.classifiers.bayes.NaiveBayes')
        self.assertEqual(train_command[5], '-t')
        self.assertEqual(train_command[6], 'dataset-a.csv')
        self.assertEqual(train_command[7], '-d')
        self.assertEqual(train_command[8], classifier_dir + '/naive-bayes.model')
        self.assertEqual(train_command[9], '-threshold-file')
        self.assertEqual(train_command[10], classifier_dir + '/train.curve.arff.csv')
        self.assertEqual(train_command[11], '-threshold-label')
        self.assertEqual(train_command[12], 'G')

        test_command = csv_rows[1][5].split(" ")

        self.assertEqual(test_command[0], 'java')
        self.assertEqual(test_command[1], '-cp')
        self.assertEqual(test_command[2], weka_lib)
        self.assertEqual(test_command[3], 'weka.Run')
        self.assertEqual(test_command[4], 'weka.classifiers.bayes.NaiveBayes')
        self.assertEqual(test_command[5], '-l')
        self.assertEqual(test_command[6], classifier_dir + '/naive-bayes.model')
        self.assertEqual(test_command[7], '-T')
        self.assertEqual(test_command[8], 'dataset-b.csv')
        self.assertEqual(test_command[9], '-classifications')
        self.assertEqual(test_command[10], 'weka.classifiers.evaluation.output.prediction.PlainText')
        self.assertEqual(test_command[11], '-threshold-file')
        self.assertEqual(test_command[12], classifier_dir + '/test.curve.arff.csv')
        self.assertEqual(test_command[13], '-threshold-label')
        self.assertEqual(test_command[14], 'G')

        self.assertTrue(os.path.isfile(classifier_dir + '/naive-bayes.model'))
        self.assertTrue(os.path.isfile(classifier_dir + '/roc.pdf'))
        self.assertTrue(os.path.isfile(classifier_dir + '/train.curve.arff.csv'))
        self.assertTrue(os.path.isfile(classifier_dir + '/test.curve.arff.csv'))

        self.assertTrue(os.path.isfile(self.experiment_dir + '/resume.txt'))
        self.assertTrue(os.path.isfile(self.experiment_dir + '/train_roc.pdf'))
        self.assertTrue(os.path.isfile(self.experiment_dir + '/test_roc.pdf'))
